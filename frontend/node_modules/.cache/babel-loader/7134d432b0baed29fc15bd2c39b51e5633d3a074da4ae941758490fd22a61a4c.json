{"ast":null,"code":"var _jsxFileName = \"F:\\\\Computer_Science\\\\Scaler DSML Course\\\\Business Cases\\\\E-commerce_customer_segmentation\\\\frontend\\\\src\\\\components\\\\UploadForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm({\n  onResult\n}) {\n  _s();\n  const [recency, setRecency] = useState(\"\");\n  const [frequency, setFrequency] = useState(\"\");\n  const [monetary, setMonetary] = useState(\"\");\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!recency || !frequency || !monetary) {\n      onResult(\"Error: Please enter all values.\");\n      return;\n    }\n    try {\n      const featureArray = [Number(recency), Number(frequency), Number(monetary)];\n      if (featureArray.some(isNaN)) {\n        throw new Error(\"All inputs must be numeric.\");\n      }\n      const requestBody = [{\n        features: featureArray\n      }];\n      const response = await fetch(\"http://localhost:5000/predict\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Response:\", data);\n      if (Array.isArray(data) && data.length > 0) {\n        onResult(data[0].cluster);\n      } else {\n        onResult(\"Error: Invalid response\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching prediction:\", error);\n      onResult(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      children: \"Enter RFM Data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: recency,\n      onChange: e => setRecency(e.target.value),\n      placeholder: \"Recency (Days Since Last Purchase)\",\n      required: true,\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: frequency,\n      onChange: e => setFrequency(e.target.value),\n      placeholder: \"Frequency (Number of Purchases)\",\n      required: true,\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: monetary,\n      onChange: e => setMonetary(e.target.value),\n      placeholder: \"Monetary (Total Spend)\",\n      required: true,\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: buttonStyle,\n      children: \"Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"da/Wap/Zw0eMf+HUd3nu6YB2M98=\");\n_c = UploadForm;\nconst inputStyle = {\n  padding: \"10px\",\n  borderRadius: \"5px\",\n  border: \"1px solid #ccc\",\n  fontSize: \"16px\",\n  width: \"100%\"\n};\nconst buttonStyle = {\n  padding: \"12px\",\n  fontSize: \"16px\",\n  backgroundColor: \"#28a745\",\n  color: \"white\",\n  border: \"none\",\n  borderRadius: \"5px\",\n  cursor: \"pointer\",\n  transition: \"0.3s\"\n};\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","UploadForm","onResult","_s","recency","setRecency","frequency","setFrequency","monetary","setMonetary","handleSubmit","event","preventDefault","featureArray","Number","some","isNaN","Error","requestBody","features","response","fetch","method","headers","body","JSON","stringify","ok","status","data","json","console","log","Array","isArray","length","cluster","error","message","onSubmit","style","display","flexDirection","gap","children","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","required","inputStyle","buttonStyle","_c","padding","borderRadius","border","fontSize","width","backgroundColor","color","cursor","transition","$RefreshReg$"],"sources":["F:/Computer_Science/Scaler DSML Course/Business Cases/E-commerce_customer_segmentation/frontend/src/components/UploadForm.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction UploadForm({ onResult }) {\r\n  const [recency, setRecency] = useState(\"\");\r\n  const [frequency, setFrequency] = useState(\"\");\r\n  const [monetary, setMonetary] = useState(\"\");\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!recency || !frequency || !monetary) {\r\n      onResult(\"Error: Please enter all values.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const featureArray = [Number(recency), Number(frequency), Number(monetary)];\r\n\r\n      if (featureArray.some(isNaN)) {\r\n        throw new Error(\"All inputs must be numeric.\");\r\n      }\r\n\r\n      const requestBody = [{ features: featureArray }];\r\n\r\n      const response = await fetch(\"http://localhost:5000/predict\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Response:\", data);\r\n\r\n      if (Array.isArray(data) && data.length > 0) {\r\n        onResult(data[0].cluster);\r\n      } else {\r\n        onResult(\"Error: Invalid response\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching prediction:\", error);\r\n      onResult(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}>\r\n      <label style={{ fontWeight: \"bold\" }}>Enter RFM Data:</label>\r\n      \r\n      <input\r\n        type=\"text\"\r\n        value={recency}\r\n        onChange={(e) => setRecency(e.target.value)}\r\n        placeholder=\"Recency (Days Since Last Purchase)\"\r\n        required\r\n        style={inputStyle}\r\n      />\r\n      \r\n      <input\r\n        type=\"text\"\r\n        value={frequency}\r\n        onChange={(e) => setFrequency(e.target.value)}\r\n        placeholder=\"Frequency (Number of Purchases)\"\r\n        required\r\n        style={inputStyle}\r\n      />\r\n      \r\n      <input\r\n        type=\"text\"\r\n        value={monetary}\r\n        onChange={(e) => setMonetary(e.target.value)}\r\n        placeholder=\"Monetary (Total Spend)\"\r\n        required\r\n        style={inputStyle}\r\n      />\r\n\r\n      <button type=\"submit\" style={buttonStyle}>Predict</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst inputStyle = {\r\n  padding: \"10px\",\r\n  borderRadius: \"5px\",\r\n  border: \"1px solid #ccc\",\r\n  fontSize: \"16px\",\r\n  width: \"100%\",\r\n};\r\n\r\nconst buttonStyle = {\r\n  padding: \"12px\",\r\n  fontSize: \"16px\",\r\n  backgroundColor: \"#28a745\",\r\n  color: \"white\",\r\n  border: \"none\",\r\n  borderRadius: \"5px\",\r\n  cursor: \"pointer\",\r\n  transition: \"0.3s\",\r\n};\r\n\r\nexport default UploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}