{"ast":null,"code":"var _jsxFileName = \"F:\\\\Computer_Science\\\\Scaler DSML Course\\\\Business Cases\\\\E-commerce_customer_segmentation\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport { Bar, Radar } from \"react-chartjs-2\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Chart as ChartJS, RadialLinearScale, BarElement, Tooltip, Legend, CategoryScale, LinearScale } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(RadialLinearScale, BarElement, Tooltip, Legend, CategoryScale, LinearScale);\nfunction Dashboard() {\n  _s();\n  const location = useLocation();\n  const {\n    state\n  } = location;\n  const customer = (state === null || state === void 0 ? void 0 : state.customer) || null;\n  if (!customer) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        padding: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No customer data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            padding: \"10px 20px\",\n            fontSize: \"16px\",\n            backgroundColor: \"#007bff\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\"\n          },\n          children: \"Back to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Sample average RFM values for the customer's segment\n  const segmentAverages = {\n    \"Loyal Customers\": [70, 800, 5],\n    \"Regular Shoppers\": [50, 500, 3],\n    \"Churned Customers\": [20, 200, 1],\n    \"Potential High-Value\": [60, 900, 4]\n  };\n  const customerRFM = customer.features; // Assuming it's in [Recency, Frequency, Monetary] format\n  const segmentName = customer.segment || \"Unknown Segment\";\n  const segmentAvg = segmentAverages[segmentName] || [0, 0, 0];\n  const radarData = {\n    labels: [\"Recency\", \"Frequency\", \"Monetary\"],\n    datasets: [{\n      label: \"Customer RFM\",\n      data: customerRFM,\n      backgroundColor: \"rgba(75,192,192,0.4)\",\n      borderColor: \"rgba(75,192,192,1)\"\n    }, {\n      label: `Avg ${segmentName}`,\n      data: segmentAvg,\n      backgroundColor: \"rgba(255,99,132,0.4)\",\n      borderColor: \"rgba(255,99,132,1)\"\n    }]\n  };\n  const barData = {\n    labels: [\"Recency\", \"Frequency\", \"Monetary\"],\n    datasets: [{\n      label: \"Customer\",\n      data: customerRFM,\n      backgroundColor: \"#4bc0c0\"\n    }, {\n      label: `Avg ${segmentName}`,\n      data: segmentAvg,\n      backgroundColor: \"#ff7e5f\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"30px\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"#444\"\n      },\n      children: \"Customer Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"#ff7e5f\"\n      },\n      children: [\"Segment: \", segmentName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50%\",\n        margin: \"20px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"RFM Comparison\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Radar, {\n        data: radarData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50%\",\n        margin: \"20px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer vs Segment Average\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: barData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: \"20px\",\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          backgroundColor: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\"\n        },\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Bar","Radar","Link","useLocation","Chart","ChartJS","RadialLinearScale","BarElement","Tooltip","Legend","CategoryScale","LinearScale","jsxDEV","_jsxDEV","register","Dashboard","_s","location","state","customer","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","to","fontSize","backgroundColor","color","border","borderRadius","cursor","segmentAverages","customerRFM","features","segmentName","segment","segmentAvg","radarData","labels","datasets","label","data","borderColor","barData","fontFamily","width","margin","marginTop","_c","$RefreshReg$"],"sources":["F:/Computer_Science/Scaler DSML Course/Business Cases/E-commerce_customer_segmentation/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import { Bar, Radar } from \"react-chartjs-2\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Chart as ChartJS, RadialLinearScale, BarElement, Tooltip, Legend, CategoryScale, LinearScale } from \"chart.js\";\r\n\r\nChartJS.register(RadialLinearScale, BarElement, Tooltip, Legend, CategoryScale, LinearScale);\r\n\r\nfunction Dashboard() {\r\n  const location = useLocation();\r\n  const { state } = location;\r\n  const customer = state?.customer || null;\r\n\r\n  if (!customer) {\r\n    return (\r\n      <div style={{ textAlign: \"center\", padding: \"30px\" }}>\r\n        <h1>No customer data available</h1>\r\n        <Link to=\"/\">\r\n          <button style={{ padding: \"10px 20px\", fontSize: \"16px\", backgroundColor: \"#007bff\", color: \"white\", border: \"none\", borderRadius: \"5px\", cursor: \"pointer\" }}>\r\n            Back to Home\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Sample average RFM values for the customer's segment\r\n  const segmentAverages = {\r\n    \"Loyal Customers\": [70, 800, 5],\r\n    \"Regular Shoppers\": [50, 500, 3],\r\n    \"Churned Customers\": [20, 200, 1],\r\n    \"Potential High-Value\": [60, 900, 4],\r\n  };\r\n\r\n  const customerRFM = customer.features; // Assuming it's in [Recency, Frequency, Monetary] format\r\n  const segmentName = customer.segment || \"Unknown Segment\";\r\n  const segmentAvg = segmentAverages[segmentName] || [0, 0, 0];\r\n\r\n  const radarData = {\r\n    labels: [\"Recency\", \"Frequency\", \"Monetary\"],\r\n    datasets: [\r\n      {\r\n        label: \"Customer RFM\",\r\n        data: customerRFM,\r\n        backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n      },\r\n      {\r\n        label: `Avg ${segmentName}`,\r\n        data: segmentAvg,\r\n        backgroundColor: \"rgba(255,99,132,0.4)\",\r\n        borderColor: \"rgba(255,99,132,1)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const barData = {\r\n    labels: [\"Recency\", \"Frequency\", \"Monetary\"],\r\n    datasets: [\r\n      {\r\n        label: \"Customer\",\r\n        data: customerRFM,\r\n        backgroundColor: \"#4bc0c0\",\r\n      },\r\n      {\r\n        label: `Avg ${segmentName}`,\r\n        data: segmentAvg,\r\n        backgroundColor: \"#ff7e5f\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"30px\", fontFamily: \"Arial, sans-serif\" }}>\r\n      <h1 style={{ color: \"#444\" }}>Customer Insights</h1>\r\n      <h2 style={{ color: \"#ff7e5f\" }}>Segment: {segmentName}</h2>\r\n\r\n      {/* Radar Chart for RFM Comparison */}\r\n      <div style={{ width: \"50%\", margin: \"20px auto\" }}>\r\n        <h2>RFM Comparison</h2>\r\n        <Radar data={radarData} />\r\n      </div>\r\n\r\n      {/* Bar Chart for RFM Breakdown */}\r\n      <div style={{ width: \"50%\", margin: \"20px auto\" }}>\r\n        <h2>Customer vs Segment Average</h2>\r\n        <Bar data={barData} />\r\n      </div>\r\n\r\n      <Link to=\"/\">\r\n        <button style={{ marginTop: \"20px\", padding: \"10px 20px\", fontSize: \"16px\", backgroundColor: \"#007bff\", color: \"white\", border: \"none\", borderRadius: \"5px\", cursor: \"pointer\" }}>\r\n          Back to Home\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}